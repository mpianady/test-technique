name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SSH_PORT: ${{ secrets.SSH_PORT }} # optionnel. Si vide, on utilisera 22

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      # CrÃ©e le .env attendu par l'app (utilisÃ© par PHP et/ou docker compose)
      - name: Create .env file
        run: |
          cat <<EOF > .env
          APP_ENV=prod
          GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}
          DEFAULT_DATE=${{ vars.DEFAULT_DATE }}
          EOF

      - name: Ensure remote directory exists
        run: |
          ssh -p "${SSH_PORT:-22}" -o StrictHostKeyChecking=no \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }} "mkdir -p ~/meteo-app"

      - name: Upload .env to VPS
        run: |
          scp -P "${SSH_PORT:-22}" -o StrictHostKeyChecking=no \
            .env ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/meteo-app/.env

      - name: Deploy to VPS (init/fetch/reset in-place)
        run: |
          ssh -p "${SSH_PORT:-22}" -o StrictHostKeyChecking=no \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
              set -euo pipefail
              cd ~/meteo-app

              echo "ðŸ”„ Sync repo (init or update)"
              if [ -d .git ]; then
                # DÃ©pÃ´t dÃ©jÃ  initialisÃ© : on met Ã  jour
                git remote get-url origin >/dev/null 2>&1 || git remote add origin git@github.com:${{ github.repository }}
                git fetch --depth=1 origin main
                git reset --hard origin/main
              else
                # Pas de .git : si dossier vide -> clone direct ; sinon init + fetch/reset
                if [ -z "$(ls -A 2>/dev/null)" ]; then
                  git clone git@github.com:${{ github.repository }} .
                else
                  git init
                  git remote add origin git@github.com:${{ github.repository }} || true
                  git fetch --depth=1 origin main
                  git reset --hard origin/main
                fi
              fi

              echo "ðŸš€ Docker compose up"
              docker compose down --remove-orphans || true
              docker compose up -d --build
          EOF
